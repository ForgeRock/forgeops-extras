{
  "metadata" : {
    "realm" : null,
    "entityType" : "ScriptingService",
    "entityId" : "default/globalScripts/7e3d7067-d50f-4674-8c76-a3e13a810c33",
    "uid" : "ou=7e3d7067-d50f-4674-8c76-a3e13a810c33,ou=globalScripts,ou=default,ou=GlobalConfig,ou=1.0,ou=ScriptingService,ou=services,ou=am-config",
    "sunServiceID" : "globalScript",
    "objectClass" : [ "sunServiceComponent", "top" ],
    "pathParams" : { },
    "ou" : [ "7e3d7067-d50f-4674-8c76-a3e13a810c33" ]
  },
  "data" : {
    "_id" : "default/globalScripts/7e3d7067-d50f-4674-8c76-a3e13a810c33",
    "_type" : {
      "_id" : "ScriptingService",
      "name" : "ScriptingService",
      "collection" : false
    },
    "createdBy" : "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
    "evaluatorVersion" : "V1_0",
    "creationDate" : "1433147666269",
    "language" : "JAVASCRIPT",
    "script" : "/*\n * Copyright 2015-2022 ForgeRock AS. All Rights Reserved\n *\n * Use of this code requires a commercial software license with ForgeRock AS.\n * or with one of its affiliates. All use shall be exclusively subject\n * to such license between the licensee and ForgeRock AS.\n */\n\nvar START_TIME = 9;  // 9am\nvar END_TIME   = 17; // 5pm\nvar longitude, latitude;\nvar localTime;\n\nlogger.message(\"Starting scripted authentication\");\nlogger.message(\"User: \" + username);\n\nvar userPostalAddress = getUserPostalAddress();\nlogger.message(\"User address: \" + userPostalAddress);\n\ngetLongitudeLatitudeFromUserPostalAddress();\ngetLocalTime();\n\nlogger.message(\"Current time at the users location: \" + localTime.getHours());\nif (localTime.getHours() < START_TIME || localTime.getHours() > END_TIME) {\n    logger.error(\"Login forbidden outside work hours!\");\n    authState = FAILED;\n} else {\n    logger.message(\"Authentication allowed!\");\n    authState = SUCCESS;\n}\n\nfunction getLongitudeLatitudeFromUserPostalAddress() {\n\n    var request = new org.forgerock.http.protocol.Request();\n    request.setUri(\"http://maps.googleapis.com/maps/api/geocode/json?address=\" + encodeURIComponent(userPostalAddress));\n  \trequest.setMethod(\"GET\");\n  \t//the above URI has to be extended with an API_KEY if used in a frequent manner\n  \t//see documentation: https://developers.google.com/maps/documentation/geocoding/intro\n\n    var response = httpClient.send(request).get();\n    logResponse(response);\n\n    var geocode = JSON.parse(response.getEntity());\n    var i;\n    for (i = 0; i < geocode.results.length; i++) {\n        var result = geocode.results[i];\n        latitude = result.geometry.location.lat;\n        longitude = result.geometry.location.lng;\n\n   \t    logger.message(\"latitude:\" + latitude + \" longitude:\" + longitude);\n    }\n}\n\nfunction getLocalTime() {\n\n    var now = new Date().getTime() / 1000;\n    var location = \"location=\" + latitude + \",\" + longitude;\n    var timestamp = \"timestamp=\" + now;\n\n    var request = new org.forgerock.http.protocol.Request();\n    request.setUri(\"https://maps.googleapis.com/maps/api/timezone/json?\" + location + \"&\" + timestamp);\n  \trequest.setMethod(\"GET\");\n  \t//the above URI has to be extended with an API_KEY if used in a frequent manner\n  \t//see documentation: https://developers.google.com/maps/documentation/timezone/intro\n\n    var response = httpClient.send(request).get();\n    logResponse(response);\n\n    var timezone = JSON.parse(response.getEntity());\n    var localTimestamp = parseInt(now) + parseInt(timezone.dstOffset) + parseInt(timezone.rawOffset);\n    localTime = new Date(localTimestamp*1000);\n}\n\nfunction getUserPostalAddress() {\n    var userAddressSet = idRepository.getAttribute(username, \"postalAddress\");\n    if (userAddressSet == null || userAddressSet.isEmpty()) {\n        logger.warning(\"No address specified for user: \" + username);\n        return false;\n    }\n    return userAddressSet.iterator().next()\n}\n\nfunction logResponse(response) {\n    logger.message(\"User REST Call. Status: \" + response.getStatus() + \", Body: \" + response.getEntity());\n}",
    "description" : "Default global script for server side Scripted Authentication Module",
    "lastModifiedBy" : "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
    "context" : "AUTHENTICATION_SERVER_SIDE",
    "lastModifiedDate" : "1433147666269",
    "name" : "Scripted Module - Server Side"
  }
}