{
  "metadata" : {
    "realm" : null,
    "entityType" : "ScriptingService",
    "entityId" : "default/globalScripts/3f93ef6e-e54a-4393-aba1-f322656db28a",
    "uid" : "ou=3f93ef6e-e54a-4393-aba1-f322656db28a,ou=globalScripts,ou=default,ou=GlobalConfig,ou=1.0,ou=ScriptingService,ou=services,ou=am-config",
    "sunServiceID" : "globalScript",
    "objectClass" : [ "sunServiceComponent", "top" ],
    "pathParams" : { },
    "ou" : [ "3f93ef6e-e54a-4393-aba1-f322656db28a" ]
  },
  "data" : {
    "_id" : "default/globalScripts/3f93ef6e-e54a-4393-aba1-f322656db28a",
    "_type" : {
      "_id" : "ScriptingService",
      "name" : "ScriptingService",
      "collection" : false
    },
    "createdBy" : "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
    "evaluatorVersion" : "V1_0",
    "creationDate" : "1433147666269",
    "language" : "JAVASCRIPT",
    "script" : "/*\n * Copyright 2021 ForgeRock AS. All Rights Reserved\n * Use of this code requires a commercial software license with ForgeRock AS.\n * or with one of its affiliates. All use shall be exclusively subject\n * to such license between the licensee and ForgeRock AS.\n */\n\n/*\n * This script lets you return additional data when authorize request is called.\n *\n * Defined variables:\n *\n * session - SSOToken (1)\n *           Present if the request contains the session cookie, the user's session object.\n *\n * httpClient - HTTP Client (2).\n *              Always present, the HTTP client that can be used to make external HTTP requests\n *\n * logger - Debug (3)\n *          Always present, the \"ScriptedAuthorizeEndpointDataProvider\" debug logger instance:\n *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.\n *          Corresponding log files will be prefixed with: scripts.OAUTH2_AUTHORIZE_ENDPOINT_DATA_PROVIDER.\n *\n * scriptName - String (primitive).\n *              Always present, the display name of the script\n *\n * Return - a Map<String, String> of additional data (4).\n *\n * Class reference:\n * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.\n * (2) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.\n * (3) Debug - https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.\n * (4) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html.\n */\n\n/**\n * Default authorize endpoint data provider script to use as a template for new scripts.\n */\n\n/* EXAMPLE\nvar map = new java.util.HashMap();\n\nfunction addAdditionalData() {\n\n    //If constant data needs to be returned\n    map.put(\"hello\", \"world\");\n\n    //If some data needs to be returned from third party service\n    addAdditionalDataFromExternalService();\n\n    //If there is a need to return some user session data\n    addAdditionalDataFromSessionProperties()\n\n    return map;\n};\n\nfunction addAdditionalDataFromExternalService() {\n  var frJava = JavaImporter(\n        org.forgerock.oauth2.core.exceptions.ServerException\n    );\n  try {\n        //Obtain additional data by performing a REST call to an external service\n        var request = new org.forgerock.http.protocol.Request();\n        request.setUri(\"https://third.party.app/hello.jsp\");\n        request.setMethod(\"POST\");\n        //request.setEntity(\"foo=bar&hello=world\");\n        request.setEntity(json(object(\n                    field(\"foo\", \"bar\"))));\n        var response = httpClient.send(request).getOrThrow();\n        logResponse(response);\n        var result = JSON.parse(response.getEntity());\n        map.put(\"someKey\",result.get(\"someKey\"));\n  } catch (err) {\n     throw new frJava.ServerException(err);\n  }\n};\n\nfunction addAdditionalDataFromSessionProperties() {\n  //Add additional data from session property values\n   if (session != null) { // session is not available for resource owner password credentials grant\n     map.put(\"ipAddress\", session.getProperty(\"Host\"))\n   }\n};\n\nfunction logResponse(response) {\n    logger.message(\"User REST Call. Status: \" + response.getStatus() + \", Body: \" + response.getEntity());\n};\n\naddAdditionalData();\n*/",
    "description" : "Default global script for OAuth2 Authorize Endpoint Data Provider",
    "lastModifiedBy" : "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
    "context" : "OAUTH2_AUTHORIZE_ENDPOINT_DATA_PROVIDER",
    "lastModifiedDate" : "1433147666269",
    "name" : "OAuth2 Authorize Endpoint Data Provider Script"
  }
}