{
  "metadata" : {
    "realm" : null,
    "entityType" : "ScriptingService",
    "entityId" : "default/globalScripts/13e3f263-9cd3-4844-8d1c-040fd0dd02eb",
    "uid" : "ou=13e3f263-9cd3-4844-8d1c-040fd0dd02eb,ou=globalScripts,ou=default,ou=GlobalConfig,ou=1.0,ou=ScriptingService,ou=services,ou=am-config",
    "sunServiceID" : "globalScript",
    "objectClass" : [ "sunServiceComponent", "top" ],
    "pathParams" : { },
    "ou" : [ "13e3f263-9cd3-4844-8d1c-040fd0dd02eb" ]
  },
  "data" : {
    "_id" : "default/globalScripts/13e3f263-9cd3-4844-8d1c-040fd0dd02eb",
    "_type" : {
      "_id" : "ScriptingService",
      "name" : "ScriptingService",
      "collection" : false
    },
    "createdBy" : "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
    "evaluatorVersion" : "V1_0",
    "creationDate" : "1433147666269",
    "language" : "JAVASCRIPT",
    "script" : "/*\n * Copyright 2020-2022 ForgeRock AS. All Rights Reserved\n *\n * Use of this code requires a commercial software license with ForgeRock AS.\n * or with one of its affiliates. All use shall be exclusively subject\n * to such license between the licensee and ForgeRock AS.\n */\n\n/** ******************************************************************\n *\n * The following script is a simplified template for understanding\n * the basics of device matching. _This is not functionally complete._\n * For a functionally complete script as well as a development toolkit,\n * visit https://github.com/ForgeRock/forgerock-device-match-script.\n *\n * Global node variables accessible within this scope:\n * 1. `sharedState` provides access to incoming request\n * 2. `deviceProfilesDao` provides access to stored profiles\n * 3. `outcome` variable maps to auth tree node outcomes; values are\n *    'true', 'false', or 'unknownDevice' (notice _all_ are strings).\n * ******************************************************************/\n\n/**\n * Get the incoming request's device profile.\n * Returns serialized JSON (type string); parsing this will result a\n * native JS object.\n */\nvar incomingJson = sharedState.get('forgeRock.device.profile').toString();\nvar incoming = JSON.parse(incomingJson);\n\n/**\n * Get the incoming user's username and realm.\n * Notice the use of `.asString()`.\n */\nvar username = sharedState.get(\"username\").asString();\nvar realm = sharedState.get(\"realm\").asString();\n\n/**\n * Get the user's stored profiles for appropriate realm.\n * Returns a _special_ object with methods for profile data\n */\nvar storedProfiles = deviceProfilesDao.getDeviceProfiles(username, realm);\n\n// Default to `outcome` of 'unknownDevice'\noutcome = 'unknownDevice';\n\nif (storedProfiles) {\n    var i = 0;\n    // NOTE: `.size()` method returns the number of stored profiles\n    var len = storedProfiles.size();\n\n    for (i; i < len; i++) {\n        /**\n         * Get the stored profile.\n         * Returns serialized JSON (type string); parsing this will result\n         * a native JS object.\n         */\n        var storedJson = storedProfiles.get(i);\n        var stored = JSON.parse(storedJson);\n\n        /**\n         * Find a stored profile with the same identifier.\n         */\n        if (incoming.identifier === stored.identifier) {\n\n            /**\n             * Now that you've found the appropriate profile, you will perform\n             * the logic here to match the values of the `incoming` profile\n             * with that of the `stored` profile.\n             *\n             * The result of the matching logic is assigned to `outcome`. Since\n             * we have profiles of the same identifier, the value (type string)\n             * should now be either 'true' or 'false' (properties matched or not).\n             *\n             * For more information about this topic, visit this Github repo:\n             * https://github.com/ForgeRock/forgerock-device-match-script\n             */\n            outcome = 'false';\n        }\n    }\n}",
    "description" : "Default global script template for Device Profile Match decision node script for Authentication Tree",
    "lastModifiedBy" : "id=dsameuser,ou=user,dc=openam,dc=forgerock,dc=org",
    "context" : "AUTHENTICATION_TREE_DECISION_NODE",
    "lastModifiedDate" : "1433147666269",
    "name" : "Device Profile Match Template - Decision Node Script"
  }
}